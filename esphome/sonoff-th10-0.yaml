
substitutions:
  device: garage-security-light
  Name: Garage Security Light
  SSID: !secret wifi_iot_ssid
  SSID_PWD: !secret wifi_iot_password
  FB_PWD: !secret esphome_fallback_ap_password
  ESP_PWD: !secret esphome_password
  #IP_Addr: 192.168.1.66

esphome:
  name: ${device}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: ${SSID}
  password: ${SSID_PWD}
  #manual_ip:
  #  static_ip: ${IP_Addr}
  #  gateway: 192.168.1.1
  #  subnet: 255.255.255.0
  #  dns1: 192.168.1.1
  ap:
    ssid: "${Name} Hotspot"
    password: ${FB_PWD}
  fast_connect: False
  reboot_timeout: 0s

logger:
  baud_rate: 0 # (UART logging interferes with cse7766)

api:
  password: ${ESP_PWD}

ota:
  password: ${ESP_PWD}
  
captive_portal:

web_server:
  port: 80

time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  - platform: wifi_signal
    name: "${Name} WiFi Signal"
    update_interval: 60s

  - platform: uptime
    name: ${Name} Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + " days " : "") +
                (hours ? to_string(hours) + " hrs " : "") +
                (minutes ? to_string(minutes) + " mins " : "") +
                (to_string(seconds) + " secs")
              ).c_str();

  - platform: dht
    model: si7021
    pin: GPIO14
    humidity:
      name: ${Name} Humidity
      unit_of_measurement: "%"
      accuracy_decimals: 1
      icon: "mdi:water-percent"
    temperature:
      name: ${Name} Temperature
      filters:
        - lambda: return x * (9.0/5.0) + 32.0;
      unit_of_measurement: "Â°F"
      accuracy_decimals: 1
      icon: "mdi:thermometer"
    update_interval: 60s

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: True
    name: "${Name} Button"
    on_press:
      - switch.toggle: relay

  - platform: status
    name: "${Name} Status"

text_sensor:
  - platform: version
    name: ${Name} ESPHome Version

  - platform: wifi_info
    ip_address:
      name: ${Name} IP
    ssid:
      name: ${Name} SSID
    bssid:
      name: ${Name} BSSID

  - platform: template
    name: ${Name} Uptime
    id: uptime_human
    icon: mdi:clock-start

switch:
  - platform: restart
    name: "${Name} Restart"

  - platform: gpio
    name: "${Name} Relay"
    icon: "mdi:electric-switch"
    pin: GPIO12
    id: relay
    restore_mode: RESTORE_DEFAULT_OFF

status_led:
  pin: GPIO13

    